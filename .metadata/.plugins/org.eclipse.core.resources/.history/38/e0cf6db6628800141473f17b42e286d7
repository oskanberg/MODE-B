
rule Ecosystem
  transform s : source!Ecosystem
  to t : target!Ecosystem {
  	t.libraries ::= s.libraries;
  	t.devices ::= s.devices;
  	t.mediaSources ::= s.mediaSources;
}

rule Library
  transform s : source!Library
  to t : target!Library {
  	t.collections ::= s.collections;
}

rule MediaCollection
  transform s : source!MediaCollection
  to t : target!MediaCollection {
  	t.members ::= s.members;
  	t.host ::= s.host;
  	t.syncedDevices ::= s.syncedDevices;
}

rule Tablet
  transform s : source!Tablet
  to t : target!Tablet {
  	t.hostOf ::= s.hostOf;
  	t.collections ::= s.collections;
}

rule Computer
  transform s : source!Computer
  to t : target!Computer {
  	t.hostOf ::= s.hostOf;
  	t.collections ::= s.collections;
}

rule Tablet
  transform s : source!Tablet
  to t : target!Tablet {
  	t.hostOf ::= s.hostOf;
  	t.collections ::= s.collections;
}

@gmf.node(label="name")
abstract class Device extends NamedElement {
	ref MediaCollection[*]#host hostOf;
	ref MediaCollection[*]#syncedDevices collections;
}

class Tablet extends Device {
}
class Computer extends Device {	
}
class Smartphone extends Device {
}
class EReader extends Device {
	attr Boolean videoEnabled;
	attr Boolean audioEnabled;
}

/***** Media Artifacts ****/

// all media types inherit artifact
@gmf.node(label="name")
abstract class Artifact extends NamedElement {
	@gmf.link(target.decoration="arrow", style="dot", color="50,200,0", label.text="origin")
	ref MediaSource[1]#contents origin;
}

abstract class DurationArtifact extends Artifact {
	// duration is in miliseconds
	// on int64, that's max ~597h
	attr int duration;
}

class AudioBook extends DurationArtifact {
}
class MusicTrack extends DurationArtifact {
}
class Video extends DurationArtifact {
}


class Image extends Artifact {
}
class Ebook extends Artifact {
}



/***** Media Sources ****/

// all sources inherit MediaSource
@gmf.node(label="name")
abstract class MediaSource extends NamedElement {
	ref Artifact[*]#origin contents;
}

enum SourceType {
	CD;
	DVD;
	VHS;
	CASSETTE;
	HDD;
	OTHER;
}

class ExternalSource extends MediaSource {
	attr SourceType sourceType;
}

class Store extends MediaSource {
}
